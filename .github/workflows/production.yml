name: Serverless Deployment - Production

on:
  push:
    branches:
      - main

env:
  ENV: prod

jobs:
  pre_deploy_checks:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker
        uses: docker/setup-buildx-action@v2
        with:
          version: 'latest'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install Dependencies
        run: npm ci

      - name: Set Environment Variables
        run: cp .env.ci .env

      - name: Generate Prisma Client
        run: npm run prisma:generate

      - name: Run Type Checking
        run: npm run type:check

      - name: Run Lint
        run: npm run lint

      - name: Run Tests
        run: npm run coverage

      - name: Check Coverage Report Threshold
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Test coverage is below 80%. Failing the build."
            exit 1
          fi

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: pre_deploy_checks
  #   timeout-minutes: 10

  #   env:
  #     NODE_ENV: production
  #     PORT: 3002
  #     LOG_LEVEL: info
  #     CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
  #     CLOUD_ENVIRONMENT: test
  #     HEALTH_BUILD: ${{ github.run_number }}
  #     HEALTH_RELEASE: ${{ github.run_id }}
  #     DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }}
  #     DATABASE_PRISMA_BINARY_TARGETS: ${{ secrets.DATABASE_PRISMA_BINARY_TARGETS }}

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
  #         aws-region: ${{ secrets.AWS_ACCOUNT_REGION_PROD }}

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         cache: 'npm'
  #         cache-dependency-path: '**/package-lock.json'

  #     - name: Install Dependencies
  #       run: npm ci

  #     - name: Cache Serverless Framework
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.serverless
  #         key: ${{ runner.os }}-serverless-prod-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-serverless-prod-

  #     - name: Run Prisma Migrations
  #       run: npm run prisma:deploy

  #     - name: Generate Prisma Client
  #       run: npm run prisma:generate

  #     # - name: Seed the Database
  #     #   run: npm run prisma:seed

  #     - name: Deploy with Serverless
  #       run: npm run deploy
  #       env:
  #         SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
